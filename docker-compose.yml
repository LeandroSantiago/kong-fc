version: '3.7'

volumes:
  postgres_data:
    driver: local
  kong_data:
    driver: local

networks:
  portal_net:
    driver: bridge

services:
  postgres:
    container_name: keycloak_db
    image: postgres:15.3
    #command: postgres -c 'max_connections=200' && postgres -c 'shared_buffers=24MB' && postgres -c 'make-ssl-cert generate-default-snakeoil --force-overwrite'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./keycloak/keycloak.db.env
    networks:
      - portal_net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    
  kong_db:
    container_name: kong_db
    image: postgres:9.5
    env_file:
      - ./kong/db/environment/kong.db.env          
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - portal_net
    volumes:
      - kong_data:/var/lib/postgresql/data
  
  kong-migrations:
    container_name: kong-migrations
    build:
      context: ./kong
    command: kong migrations bootstrap
    depends_on:
      - kong_db
    env_file:
      - ./kong/environment/migrations.env      
    networks:
      - portal_net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong-migrations-up:
    container_name: kong-migrations-up
    build:
      context: ./kong
    command: kong migrations up && kong migrations finish
    depends_on:
      - kong_db
    env_file:
      - ./kong/environment/migrations.up.env
    networks:
      - portal_net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    
  keycloak:
    container_name: keycloak_service
    build:
      context: ./keycloak
    env_file:
      - ./keycloak/keycloak.env      
    command: start
    networks:
      - portal_net
    ports:
      - 8180:8080
    depends_on:
      postgres:
        condition: service_healthy     
   
  kong:
    container_name: kong
    build:
      context: ./kong
    depends_on:
      - kong_db
    env_file:
      - ./kong/environment/kong.env          
    networks:
      - portal_net
    ports:
      - "8000:8000/tcp"
      - "8001:8001/tcp"
      - "543:8543/tcp"
      - "8444:8444/tcp"    
    healthcheck:
      test: ["CMD", "wget", "-O-", "http://kong:8001/status"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  konga-prepare:
    container_name: konga-prepare
    build:
      context: ./konga
    command: "-c prepare -a postgres -u postgresql://kong:Pa55w0rd@kong_db:5432/konga_db"
    networks:
      - portal_net
    restart: on-failure
    depends_on:
      - kong_db

  konga:
    container_name: konga
    build:
      context: ./konga
    restart: always
    networks:
      - portal_net
    env_file:
      - ./konga/environment/konga.env      
    depends_on:
      - kong_db
    ports:
      - "1337:1337"